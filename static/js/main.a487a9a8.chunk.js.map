{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","components/main/Main.js","App.js","index.js"],"names":["FeedbackOptions","leaveFeedback","options","map","option","type","name","onClick","toUpperCase","Notification","message","Section","children","title","className","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Main","state","event","setState","prev","target","this","Object","keys","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAceA,EAZS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QACxC,OACE,8BACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBAAQC,KAAK,SAASC,KAAMF,EAAQG,QAASN,EAA7C,SACGG,EAAOI,sBCDHC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCQEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,oBAAIC,UAAU,eAAd,SAA8BD,IAC7BD,MCQQG,EAZI,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,IAAKC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,gCAC5D,OACE,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAAuBC,IAAkCC,QAAQ,GAAjE,WC2CSC,E,4MA7CbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPjB,cAAgB,SAACuB,GACf,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAMG,OAAOrB,KAAOoB,EAAKF,EAAMG,OAAOrB,MAAQ,O,EAInDa,mBAAqB,WACnB,OAAO,EAAKI,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAG3DE,gCAAkC,WAChC,OAAkC,IAA9B,EAAKD,qBACA,EAED,EAAKI,MAAMP,KAAO,EAAKG,qBAAwB,K,4CAGzD,WACE,OACE,qCACE,cAAC,EAAD,CAASN,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBZ,cAAe2B,KAAK3B,cAAeC,QAAS2B,OAAOC,KAAKF,KAAKL,WAEhF,cAAC,EAAD,CAASV,MAAO,aAAhB,SACGe,KAAKT,qBACJ,cAAC,EAAD,2BACMS,KAAKL,OADX,IAEEJ,mBAAoBS,KAAKT,mBACzBC,gCAAiCQ,KAAKR,mCAGxC,cAAC,EAAD,CAAcV,QAAQ,+B,GAtCfqB,aCKJC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a487a9a8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FeedbackOptions = ({ leaveFeedback, options }) => {\n  return (\n    <div>\n      {options.map((option) => (\n        <button type=\"button\" name={option} onClick={leaveFeedback}>\n          {option.toUpperCase()}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      <h2 className=\"sectionTitle\">{title}</h2>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage }) => {\n  return (\n    <ul>\n      <li>Good:{good}</li>\n      <li>Neutral:{neutral}</li>\n      <li>Bad:{bad}</li>\n      <li>Total:{countTotalFeedback()}</li>\n      <li>Positive Feedback:{countPositiveFeedbackPercentage().toFixed(2)}%</li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\nimport Notification from \"../notification/Notification\";\nimport Section from \"../section/Section\";\nimport Statistics from \"../statistics/Statistics\";\n\nclass Main extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (event) => {\n    this.setState((prev) => ({\n      [event.target.name]: prev[event.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    }\n    return (this.state.good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions leaveFeedback={this.leaveFeedback} options={Object.keys(this.state)} />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback() ? (\n            <Statistics\n              {...this.state}\n              countTotalFeedback={this.countTotalFeedback}\n              countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}